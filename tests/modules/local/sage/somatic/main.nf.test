nextflow_process {
    name "Test Process SAGE_SOMATIC"
    script "modules/local/sage/somatic/main.nf"
    process "SAGE_SOMATIC"

    test("SAGE (Somatic) testing tumor + normal") {
        when {
            params {
                test_sample_data = 'https://raw.githubusercontent.com/nf-core/test-datasets/oncoanalyser/sample_data/simulated_reads/wgts/markdups_bam/'
            }
            process {
                """
                println "Debug: Starting input definition"
                
                input[0] = [
                    [id: 'test', tumor_id: 'tumor_test', normal_id: 'normal_test'],
                    file(params.test_sample_data + 'subject_a.tumor.dna.bwa-mem2_2.2.1.markdups.bam'),
                    file(params.test_sample_data + 'subject_a.normal.dna.bwa-mem2_2.2.1.markdups.bam'),
                    [],  // donor_bam (empty list as it's optional)
                    file(params.test_sample_data + 'subject_a.tumor.dna.bwa-mem2_2.2.1.markdups.bam.bai'),
                    file(params.test_sample_data + 'subject_a.normal.dna.bwa-mem2_2.2.1.markdups.bam.bai'),
                    []   // donor_bai (empty list as it's optional)
                ]
                
                println "Debug: input[0] defined"
                
                input[1] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna")
                input[2] = 38
                input[3] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai")
                input[4] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.dict")
                input[5] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/hmf_data_5.34_38--2/dna_pipeline/variants/KnownHotspots.somatic.38.vcf.gz")
                input[6] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/hmf_data_5.34_38--2/dna_pipeline/variants/ActionableCodingPanel.38.bed.gz")
                input[7] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/hmf_data_5.34_38--2/dna_pipeline/variants/CoverageCodingPanel.38.bed.gz")
                input[8] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/hmf_data_5.34_38--2/dna_pipeline/variants/HG001_GRCh38_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-10X-SOLID_CHROM1-X_v.3.3.2_highconf_nosomaticdel_noCENorHET7.bed.gz")
                input[9] = file("/home/rhassaine/resource_files_oa/38/results/reference_data/1.0.0/20250203_101759/hmf_data_5.34_38--2/dna_pipeline/common/ensembl_data/")
                
                println "Debug: All inputs defined"
                """
            }
        }

        then {
            println "Debug: Entering 'then' block"
            println "Debug: process.success = ${process.success}"
            println "Debug: process.out = ${process.out}"

            assert snapshot(process.out).match()
            
            assert process.success
            assert process.out.sage_dir != null
            
            println "Debug: Assertions passed"

            def sage_dir = process.out.sage_dir[0][1]
            println "Debug: sage_dir = ${sage_dir}"

            assert sage_dir != null
            assert new File(sage_dir).exists()

            println "Debug: Checking output files"
            def outputDir = new File(sage_dir)
            println "Debug: Files in output directory:"
            outputDir.eachFile { file ->
                println "  ${file.name}"
                assert file.exists()
            }

            // Specific file checks
            assert new File(sage_dir, "tumor_test.sage.exon.medians.tsv").exists()
            assert new File(sage_dir, "normal_test.sage.bqr.png").exists()
            assert new File(sage_dir, "normal_test.sage.bqr.tsv").exists()
            assert new File(sage_dir, "tumor_test.sage.bqr.png").exists()
            assert new File(sage_dir, "tumor_test.sage.somatic.vcf.gz").exists()
            assert new File(sage_dir, "tumor_test.sage.gene.coverage.tsv").exists()
            assert new File(sage_dir, "tumor_test.sage.somatic.vcf.gz.tbi").exists()
            assert new File(sage_dir, "tumor_test.sage.bqr.tsv").exists()

            println "Debug: All checks passed"
        }
    }
}