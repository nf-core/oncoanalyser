--- a/CupGenerateReport_pipeline.R
+++ b/CupGenerateReport_pipeline.R
@@ -150,49 +150,30 @@ titleHeight = 10
 disclaimer1Height = 12
 disclaimer2Height = 14

-if (featureCount > featureLimit)
-{
-  separateFeaturePlot = T
-  print(sprintf('Features(%d) print separately', featureCount))
-  plotHeights = c(summaryHeight, genderHeight, sigHeight, percHeight)
-  plotHeightsDisclaimer = c(titleHeight, disclaimer1Height, disclaimer2Height, summaryHeight, genderHeight, sigHeight, percHeight)
-} else
-{
-  separateFeaturePlot = F
-  featureHeight = 45 + (featureCount - 1) * 10
-  plotHeights = c(summaryHeight, genderHeight, sigHeight, percHeight, featureHeight)
-  plotHeightsDisclaimer = c(titleHeight, disclaimer1Height, disclaimer2Height, summaryHeight, genderHeight, sigHeight, percHeight, featureHeight)
-}
+print(sprintf('Features(%d) print separately', featureCount))
+plotHeights = c(summaryHeight, genderHeight, sigHeight, percHeight)
+plotHeightsDisclaimer = c(titleHeight, disclaimer1Height, disclaimer2Height, summaryHeight, genderHeight, sigHeight, percHeight)

 # Generating PNG files
-outputFileSummary = paste0(cuppaDir, sampleId, '.cup.report.summary.png')
-if (separateFeaturePlot)
-{
-  outputFileFeatures = paste0(cuppaDir, sampleId, '.cup.report.features.png')
-  print(paste0("Writing output to png file: ", outputFileSummary))
-  png(file = outputFileSummary, res = 140, height = 2200, width = 4000)
-  grid.arrange(plot_grid(summaryPlot, genderPlot, sigPlot, svTraitsPlot,
-                         ncol = 1, nrow = 4, rel_heights = plotHeights, align = 'v', axis = 'l'))
-
-  print(paste0("Writing output to png file: ", outputFileFeatures))
-  png(file = outputFileFeatures, res = 140, height = 2200, width = 4000)
-  featurePlot = featurePlot +
-    scale_x_discrete(position = "top") +
-    theme(axis.text.x.top = element_text(angle = 90, hjust = 0, size = 10, face = 'bold', family = font))
-  grid.arrange(plot_grid(featurePlot, ncol = 1, nrow = 1), newpage = T)
-} else
-{
-  print(paste0("Writing output to png file: ", outputFileSummary))
-  png(file = outputFileSummary, res = 140, height = 2200, width = 4000)
-  plot_grid(summaryPlot, genderPlot, sigPlot, svTraitsPlot, featurePlot,
-            ncol = 1, nrow = 5, rel_heights = plotHeights, align = 'v', axis = 'l')
-}
+outputFileSummary = paste0(sampleId, '.cup.report.summary.png')
+outputFileFeatures = paste0(sampleId, '.cup.report.features.png')
+print(paste0("Writing output to png file: ", outputFileSummary))
+png(file = outputFileSummary, res = 140, height = 2200, width = 4000)
+grid.arrange(plot_grid(summaryPlot, genderPlot, sigPlot, svTraitsPlot,
+                       ncol = 1, nrow = 4, rel_heights = plotHeights, align = 'v', axis = 'l'))
+
+print(paste0("Writing output to png file: ", outputFileFeatures))
+png(file = outputFileFeatures, res = 140, height = 2200, width = 4000)
+featurePlot = featurePlot +
+  scale_x_discrete(position = "top") +
+  theme(axis.text.x.top = element_text(angle = 90, hjust = 0, size = 10, face = 'bold', family = font))
+grid.arrange(plot_grid(featurePlot, ncol = 1, nrow = 1), newpage = T)

 dev.off()

 # Generate PDF report with disclaimer

-outputFile = paste0(cuppaDir, sampleId, '_cup_report.pdf')
+outputFile = paste0(sampleId, '_cup_report.pdf')
 print(paste0("writing output to pdf file: ", outputFile))

 pdf(file = outputFile, height = 14, width = 20)
@@ -202,16 +183,9 @@ title = textGrob(paste0(sampleId, ' CUP Report'), gp = gpar(fontface = "bold", f
 disclaimer1 = textGrob(paste('All results and data described in this report are for research-use-only and have not been generated using a clinically validated and controlled procedure.'), gp = gpar(fontface = "bold", fontsize = 13))
 disclaimer2 = textGrob(paste('These results should not be used for clinical decision making.'), gp = gpar(fontface = "bold", fontsize = 13))

-if (separateFeaturePlot)
-  {
-  grid.arrange(plot_grid(title, disclaimer1, disclaimer2, summaryPlot, genderPlot, sigPlot, svTraitsPlot,
-                         ncol = 1, nrow = 7, rel_heights = plotHeightsDisclaimer, align = 'v', axis = 'l'))
-
-  grid.arrange(plot_grid(featurePlot, ncol = 1, nrow = 1), newpage = T)
-} else
-{
-  plot_grid(title, disclaimer1, disclaimer2, summaryPlot, genderPlot, sigPlot, svTraitsPlot, featurePlot,
-            ncol = 1, nrow = 8, rel_heights = plotHeightsDisclaimer, align = 'v', axis = 'l')
-}
+grid.arrange(plot_grid(title, disclaimer1, disclaimer2, summaryPlot, genderPlot, sigPlot, svTraitsPlot,
+                       ncol = 1, nrow = 7, rel_heights = plotHeightsDisclaimer, align = 'v', axis = 'l'))
+
+grid.arrange(plot_grid(featurePlot, ncol = 1, nrow = 1), newpage = T)

-dev.off()
\ No newline at end of file
+dev.off()
